/* Autogenerated SystemVerilog file to create a FPTD */
/* Created on 2015-11-05 19:32 */ 

// but1: Upper Term.   1: Termination bits (3) x N bits 
// bua2: Upper Apriori 2: Parity bits      (FrameLength + 3) x N bits 
// bua3: Upper Apriori 3: Systematic bits  (FrameLength) x N bits 
// blt3: Lower Term.   1: Termination bits (3) x N bits 
// bla2: Lower Apriori 2: Parity bits      (FrameLength + 3) x N bits 
module FPTD_Core_FL40_N4_M5 #(parameter FrameLength = 40, parameter N = 4, parameter M = 5) 
                             (input logic Clock, 
                              input logic nReset, 
                              input logic nClear,
                              input logic Enable_Odd,
                              input logic Enable_Even,
                              input logic Enable_Term,
                              input logic Enable_Error_Counter,
                              input logic [FrameLength-1:0] b1_ideal,
                              input logic signed [2:0][N-1:0] but1, 
                              input logic signed [FrameLength+2:0][N-1:0] bua2, 
                              input logic signed [FrameLength-1:0][N-1:0] bua3, 
                              input logic signed [2:0][N-1:0] blt1, 
                              input logic signed [FrameLength+2:0][N-1:0] bla2, 
                              input logic signed [FrameLength-1:0][N-1:0] bla3, 
                              output logic [5:0] Error_Count); 

// Extrinsic LLRs 
logic signed [FrameLength-1:0][M-1:0] bua1; 
logic signed [FrameLength-1:0][M-1:0] bue1; 
logic signed [FrameLength-1:0][M-1:0] bla1; 
logic signed [FrameLength-1:0][M-1:0] ble1; 

logic [FrameLength-1:0] b1l;
// Instantiate Upper Decoder 
UpperDecoder #(.FrameLength(FrameLength), .N(N), .M(M)) 
UpperDecoder(.Clock(Clock), 
             .nReset(nReset), 
             .nClear(nClear),
             .Enable_Odd(Enable_Odd),
             .Enable_Even(Enable_Even),
             .Enable_Term(Enable_Term),
             .Enable_Error_Counter(Enable_Error_Counter),
             .b1_ideal(b1_ideal),
             .ba1(bua1), 
             .bt1(but1), 
             .ba2(bua2), 
             .ba3(bua3), 
             .be1(bue1),
             .Error_Count(Error_Count)); 

// Instantiate Lower Decoder 
LowerDecoder #(.FrameLength(FrameLength), .N(N), .M(M)) 
LowerDecoder(.Clock(Clock), 
             .nReset(nReset),
             .nClear(nClear),
             .Enable_Odd(Enable_Even),
             .Enable_Even(Enable_Odd),
             .Enable_Term(Enable_Term),             
             .ba1(bla1), 
             .bt1(blt1), 
             .ba2(bla2), 
             .ba3(bla3), 
             .be1(ble1)); 

// Interleave systematic bits and provide them to the lower decoder 
assign bla3[0] = bua3[0]; 
assign bla3[1] = bua3[13]; 
assign bla3[2] = bua3[6]; 
assign bla3[3] = bua3[19]; 
assign bla3[4] = bua3[12]; 
assign bla3[5] = bua3[25]; 
assign bla3[6] = bua3[18]; 
assign bla3[7] = bua3[31]; 
assign bla3[8] = bua3[24]; 
assign bla3[9] = bua3[37]; 
assign bla3[10] = bua3[30]; 
assign bla3[11] = bua3[3]; 
assign bla3[12] = bua3[36]; 
assign bla3[13] = bua3[9]; 
assign bla3[14] = bua3[2]; 
assign bla3[15] = bua3[15]; 
assign bla3[16] = bua3[8]; 
assign bla3[17] = bua3[21]; 
assign bla3[18] = bua3[14]; 
assign bla3[19] = bua3[27]; 
assign bla3[20] = bua3[20]; 
assign bla3[21] = bua3[33]; 
assign bla3[22] = bua3[26]; 
assign bla3[23] = bua3[39]; 
assign bla3[24] = bua3[32]; 
assign bla3[25] = bua3[5]; 
assign bla3[26] = bua3[38]; 
assign bla3[27] = bua3[11]; 
assign bla3[28] = bua3[4]; 
assign bla3[29] = bua3[17]; 
assign bla3[30] = bua3[10]; 
assign bla3[31] = bua3[23]; 
assign bla3[32] = bua3[16]; 
assign bla3[33] = bua3[29]; 
assign bla3[34] = bua3[22]; 
assign bla3[35] = bua3[35]; 
assign bla3[36] = bua3[28]; 
assign bla3[37] = bua3[1]; 
assign bla3[38] = bua3[34]; 
assign bla3[39] = bua3[7]; 
// Interleave upper extrinsic into lower apriori 
assign bla1[0] = bue1[0]; 
assign bla1[1] = bue1[13]; 
assign bla1[2] = bue1[6]; 
assign bla1[3] = bue1[19]; 
assign bla1[4] = bue1[12]; 
assign bla1[5] = bue1[25]; 
assign bla1[6] = bue1[18]; 
assign bla1[7] = bue1[31]; 
assign bla1[8] = bue1[24]; 
assign bla1[9] = bue1[37]; 
assign bla1[10] = bue1[30]; 
assign bla1[11] = bue1[3]; 
assign bla1[12] = bue1[36]; 
assign bla1[13] = bue1[9]; 
assign bla1[14] = bue1[2]; 
assign bla1[15] = bue1[15]; 
assign bla1[16] = bue1[8]; 
assign bla1[17] = bue1[21]; 
assign bla1[18] = bue1[14]; 
assign bla1[19] = bue1[27]; 
assign bla1[20] = bue1[20]; 
assign bla1[21] = bue1[33]; 
assign bla1[22] = bue1[26]; 
assign bla1[23] = bue1[39]; 
assign bla1[24] = bue1[32]; 
assign bla1[25] = bue1[5]; 
assign bla1[26] = bue1[38]; 
assign bla1[27] = bue1[11]; 
assign bla1[28] = bue1[4]; 
assign bla1[29] = bue1[17]; 
assign bla1[30] = bue1[10]; 
assign bla1[31] = bue1[23]; 
assign bla1[32] = bue1[16]; 
assign bla1[33] = bue1[29]; 
assign bla1[34] = bue1[22]; 
assign bla1[35] = bue1[35]; 
assign bla1[36] = bue1[28]; 
assign bla1[37] = bue1[1]; 
assign bla1[38] = bue1[34]; 
assign bla1[39] = bue1[7]; 
// Interleave lower extrinsic into upper apriori 
assign bua1[0] = ble1[0]; 
assign bua1[13] = ble1[1]; 
assign bua1[6] = ble1[2]; 
assign bua1[19] = ble1[3]; 
assign bua1[12] = ble1[4]; 
assign bua1[25] = ble1[5]; 
assign bua1[18] = ble1[6]; 
assign bua1[31] = ble1[7]; 
assign bua1[24] = ble1[8]; 
assign bua1[37] = ble1[9]; 
assign bua1[30] = ble1[10]; 
assign bua1[3] = ble1[11]; 
assign bua1[36] = ble1[12]; 
assign bua1[9] = ble1[13]; 
assign bua1[2] = ble1[14]; 
assign bua1[15] = ble1[15]; 
assign bua1[8] = ble1[16]; 
assign bua1[21] = ble1[17]; 
assign bua1[14] = ble1[18]; 
assign bua1[27] = ble1[19]; 
assign bua1[20] = ble1[20]; 
assign bua1[33] = ble1[21]; 
assign bua1[26] = ble1[22]; 
assign bua1[39] = ble1[23]; 
assign bua1[32] = ble1[24]; 
assign bua1[5] = ble1[25]; 
assign bua1[38] = ble1[26]; 
assign bua1[11] = ble1[27]; 
assign bua1[4] = ble1[28]; 
assign bua1[17] = ble1[29]; 
assign bua1[10] = ble1[30]; 
assign bua1[23] = ble1[31]; 
assign bua1[16] = ble1[32]; 
assign bua1[29] = ble1[33]; 
assign bua1[22] = ble1[34]; 
assign bua1[35] = ble1[35]; 
assign bua1[28] = ble1[36]; 
assign bua1[1] = ble1[37]; 
assign bua1[34] = ble1[38]; 
assign bua1[7] = ble1[39]; 

endmodule